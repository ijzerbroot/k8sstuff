---
apiVersion: v1
kind: Namespace
metadata:
  name: monitoring
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: es-exporter
rules:
- apiGroups: [""]
  resources:
  - nodes
  - nodes/proxy
  - services
  - endpoints
  - pods
  - cluster
  verbs: ["get", "list", "watch"]
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs: ["get", "list", "watch"]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: es-exporter
  namespace: monitoring
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: es-exporter
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: es-exporter
subjects:
- kind: ServiceAccount
  name: es-exporter
  namespace: monitoring
---
kind: ConfigMap
metadata:
  name: es-exporter-config
  namespace: monitoring
apiVersion: v1
data:
  run.sh: |-
    #!/bin/bash

    # install jq and python if necessary
    if [ ! -f /usr/bin/jq ]
    then
      dnf -y install python jq
    fi

    cd /data
    mkdir metrics 2>/dev/null
    nohup python -m SimpleHTTPServer 8080 >/dev/null 2>&1 &

    while sleep 15
    do

    cat /dev/null > /data/newmetrics
    DATUM="`date +%Y.%m.%d`"

    curl -s -X GET http://elasticsearch:9200/filebeat-*-${DATUM}/_search -H 'Content-Type: application/json' -d "
    {
         \"from\" : 0, \"size\" : 1000,
         \"query\": {
             \"range\" : {
                 \"@timestamp\" : {
                     \"gte\" : \"now-3m\",
                     \"lt\" :  \"now\"
                 }
             }
         }
     }" | jq .hits.hits[]._source.log | sed 's/ /_/g' | sed 's/"/+/g' | grep -v prometheus > /data/last3min.txt

    for line in `cat /es-exporter/searches | sed 's/ /_/g' | sed 's/"/+/g'`
    do
    COUNT=`grep -c -i ${line} /data/last3min.txt`

    echo "logsrch_${line}" | sed "s/\$/ ${COUNT}/" > /data/output

    cat /data/output >> /data/newmetrics

    done
    cp /data/newmetrics /data/metrics/index.html

    done

  searches: |-
    error

  config: |-
    ESHOST=elasticsearch

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: es-exporter
  namespace: monitoring
  labels:
    k8s-app: es-exporter
    version: v1
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: es-exporter
      version: v1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        name: es-exporter
        k8s-app: es-exporter
        version: v1
        kubernetes.io/cluster-service: "true"
    spec:
      serviceAccountName: es-exporter
      containers:
        - command:
          - bash -c /es-exporter/run.sh
          image: docker.io/fedora:27
          imagePullPolicy: IfNotPresent
          name: es-exporter
          ports:
            - containerPort: 8080
              protocol: TCP
          volumeMounts:
            - mountPath: /es-exporter
              name: config-volume
            - mountPath: /data
              name: data-volume
      restartPolicy: Always
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
        - name: data-volume
          emptyDir: {}
        - name: config-volume
          configMap:
            name: es-exporter-config
---
apiVersion: v1
kind: Service
metadata:
  name: es-exporter
  namespace: monitoring
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    k8s-app: es-exporter
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: es-exporter-ui
  namespace: monitoring
  annotations:
    kubernetes.io/ingress.class: traefik
spec:
  rules:
  - host: es-exporter.lift
    http:
      paths:
        - path: /
          backend:
            serviceName: es-exporter
            servicePort: 8080
