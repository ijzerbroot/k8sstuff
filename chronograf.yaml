---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: chronograf
  labels:
    k8s-app: chronograf
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
rules:
- apiGroups:
  - ""
  resources:
  - "services"
  - "namespaces"
  - "endpoints"
  verbs:
  - "get"
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  namespace: default
  name: chronograf
  labels:
    k8s-app: chronograf
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
subjects:
- kind: ServiceAccount
  name: chronograf
  namespace: default
  apiGroup: ""
roleRef:
  kind: ClusterRole
  name: chronograf
  apiGroup: ""
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: chronograf
  namespace: default
  labels:
    k8s-app: chronograf
    version: v1
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: chronograf
  namespace: default
  labels:
    k8s-app: chronograf
    version: v1
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: chronograf
      version: v1
  template:
    metadata:
      labels:
        k8s-app: chronograf
        version: v1
        kubernetes.io/cluster-service: "true"
    spec:
      serviceAccountName: chronograf
      volumes:
        - name: chronografdata
          flexVolume:
            driver: rook.io/rook
            fsType: ceph
            options:
              fsName: bigfs
              clusterName: rook
              path: /chronograf
      containers:
#        - image: docker.elastic.co/kibana/kibana-oss:6.1.0
        - image: chronograf:1.3
          name: chronograf
          resources:
            # need more cpu upon initialization, therefore burstable class
            limits:
              cpu: 1000m
            requests:
              cpu: 100m
          ports:
            - containerPort: 8888
              name: chronografport
              protocol: TCP
          volumeMounts:
            - mountPath: /var/lib/chronograf
              name: chronografdata
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: chronograf
  namespace: default
  labels:
    k8s-app: chronograf
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
    kubernetes.io/name: "Kibana"
spec:
  ports:
  - port: 8888
    protocol: TCP
    targetPort: chronografport
  selector:
    k8s-app: chronograf
---

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: chronograf-ui
  namespace: default
  annotations:
    kubernetes.io/ingress.class: traefik
#    traefik.frontend.rule.type: PathPrefixStrip
spec:
  rules:
  - host: chronograf.lift
    http:
      paths:
        - path: /
          backend:
            serviceName: chronograf
            servicePort: 8888
